name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  maven:
    name: Maven compile
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: creando carpetas
        run: mkdir -p artifact
      - 
        name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - 
        name: Build with Maven Wrapper
        run: |-
          cd ${GITHUB_WORKSPACE}/alternative-courses
          chmod +x mvnw
          ./mvnw -B package --file pom.xml
          cp ./alternative-courses-webapp/target/alternative-courses-webapp-1.0-SNAPSHOT.jar ${GITHUB_WORKSPACE}/artifact/webapp.jar
      - 
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact-jar
          path: artifact/webapp.jar
      - 
        name: Qué paso con el código?
        run: cd ${GITHUB_WORKSPACE} && ls -lha && find -type f -iname "*.jar"
  buildx:
    name: Docker build and push
    runs-on: ubuntu-latest
    needs: maven
    env: 
      NAME_IMAGE: tutum-demo-1
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        uses: actions/download-artifact@v3
        with:
          name: my-artifact-jar
          path: artifact
      - 
        name: Display structure of downloaded files
        run: ls -alhR
        working-directory: artifact
      -
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - 
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.JSON_CONTAINER_REGISTRY_GCP }}'
      - 
        name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - 
        name: 'Use gcloud CLI'
        run: |-
          gcloud info
          # gcloud config set project ${{secrets.PROJECT_ID_GCP}}
          gcloud container clusters get-credentials cluster-1 --region us-central1-c
          kubectl get pods
      -
        name: Run Script Docker
        run: bash ${GITHUB_WORKSPACE}/docker/build_and_push.bash ${NAME_IMAGE} ${{secrets.PROJECT_ID_GCP}} ${{secrets.JSON_CONTAINER_REGISTRY_GCP}}
      
      
      
          






